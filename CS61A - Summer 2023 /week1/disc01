def special_case():
    x = 10
    if x > 0:
        x += 2
    elif x < 13:
        x += 3
    elif x % 2 == 1:
        x += 4
    return x

def just_in_case():
    x = 10
    if x > 0:
        x += 2
    if x < 13:
        x += 3
    if x % 2 == 1:
        x += 4
    return x

def case_in_point():
    x = 10
    if x > 0:
        return x + 2
    if x < 13:
        return x + 3
    if x % 2 == 1:
        return x + 4
    return x



print(special_case()) # -> expected 12
print(just_in_case()) # -> expected 19
print(case_in_point())  # -> expected 12

#Q1. Which of these code snippets result in the same output, and why? Based on your
#findings, when do you think using a series of if statements has the same effect 
#as using both if and elif cases?

#A. special_case and case_in_point do. Special case evaluates to 12 because conditional statement
#evaluates until it finds the first truthy value. case_in_point has 3 conditional statements,
#but the return value exits the function (I'm not sure why tbh).

#using a if statement has the same effect as using both if and elif statements if only one of the ifs in the series
#is evaluated to true, and this matches one of the if/elif conditions in a single conditional statement.
